[metadata]
name = srttools
author = Matteo Bachetti and the Discos Team
author_email = matteo.bachetti@inaf.it
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://srt-single-dish-tools.readthedocs.io
description = Tools for the analysis and conversion of SRT data
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = True
github_project = discos/srt-single-dish-tools

[options]
zip_safe = False
packages = find:
python_requires = >=3.6
setup_requires = setuptools_scm
install_requires =
    astropy
    scipy>=1.0
    numpy>=1.17
    matplotlib
    h5py
    pyyaml
    statsmodels>=0.8.0

[options.entry_points]
console_scripts =
    SDTcal = srttools.calibration:main_cal
    SDTfake = srttools.simulate:main_simulate
    SDTimage = srttools.imager:main_imager
    SDTinspect = srttools.inspect_observations:main_inspector
    SDTlcurve = srttools.calibration:main_lcurve
    SDTpreprocess = srttools.imager:main_preprocess
    SDTopacity = srttools.opacity:main_opacity
    SDTmonitor = srttools.monitor:main_monitor
    SDTconvert = srttools.convert:main_convert
    SDTbulkchange = srttools.io:main_bulk_change
    SDTparselog = srttools.parse_acs_logs:main_parse_acs_logs

[options.extras_require]
test =
    pytest-astropy
    pytest-asyncio
docs =
    sphinx-astropy
all =
    mahotas
    numba
    pyregion
    watchdog
    tornado

[options.package_data]
srttools = data/*, data/*/*, data/*/*/*, tests/data/*.fits*, tests/data/*/*.fits*, tests/data/*.ini, tests/data/*/*.ini, tests/data/acs.xml, tests/data/*.reg
srttools.tests = coveragerc

[tool:pytest]
testpaths = "srttools" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
    srttools/_astropy_init*
    srttools/conftest.py
    srttools/*setup_package*
    srttools/tests/*
    srttools/*/tests/*
    srttools/extern/*
    srttools/version*
    */srttools/_astropy_init*
    */srttools/conftest.py
    */srttools/*setup_package*
    */srttools/tests/*
    */srttools/*/tests/*
    */srttools/extern/*
    */srttools/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
