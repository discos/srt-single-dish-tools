# We set the language to c because python isn't supported on the MacOS X nodes
# on Travis. However, the language ends up being irrelevant anyway, since we
# install Python ourselves using conda.
language: c

os:
    - linux

# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

addons:
    apt:
        packages:
            - graphviz


branches:
  only:
    - "master"


env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - ASTROPY_VERSION=stable
        - CONDA_DEPENDENCIES='scipy matplotlib pip h5py pyyaml'
        - PIP_DEPENDENCIES='patsy codecov pytest pytest_astropy mahotas pillow'
        - MAIN_CMD='python setup.py'
        - SETUP_XVFB=True
        - SETUP_CMD='test'
        - MPLBACKEND='Agg'
        - USE_NUMBA=yes
        - USE_WATCHDOG=no
        - USE_PYREG=no
        - USE_STATSM=yes
    matrix:
        - PYTHON_VERSION=3.6 SETUP_CMD='egg_info'

matrix:
    fast_finish: true
    include:
        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        # Try all python versions with the latest numpy

        - env: PYTHON_VERSION=3.7 SETUP_CMD='test --coverage' SETUP_XVFB=False USE_WATCHDOG=yes USE_TORNADO=yes
#        # No matplotlib, with old scipy
#        - env: PYTHON_VERSION=3.6 CONDA_DEPENDENCIES='scipy=0.19 pytest pip h5py statsmodels pyyaml numba pyregion' SETUP_CMD='test --coverage'
        # No NUMBA, pyregion
        - env: PYTHON_VERSION=3.6 USE_NUMBA=no USE_PYREG=yes SETUP_CMD='test --coverage'
        # No statsmodels
        - env: PYTHON_VERSION=3.6 USE_STATSM=no SETUP_CMD='test --coverage'
        # Documentation
        - env: PYTHON_VERSION=3.6 SETUP_CMD='build_docs -w' PIP_DEPENDENCIES='patsy codecov sphinx_astropy'

        # From here on, they are allowed to fail
        # Try Astropy development version
        - env: PYTHON_VERSION=3.7 ASTROPY_VERSION=development SETUP_CMD='test'
        - env: PYTHON_VERSION=3.8
    allow_failures:
        # Try Astropy development version
        - env: PYTHON_VERSION=3.7 ASTROPY_VERSION=development SETUP_CMD='test'
        - env: PYTHON_VERSION=3.8

before_install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh


install:
    # OPTIONAL DEPENDENCIES
    # Here you can add any dependencies your package may have. You can use
    # conda for packages available through conda, or pip for any other
    # packages. You should leave the `numpy=$NUMPY_VERSION` in the `conda`
    # install since this ensures Numpy does not get automatically upgraded.
    - if [[ $SETUP_CMD != egg_info ]] && [[ $USE_NUMBA == yes ]]; then $CONDA_INSTALL numba; fi
    - if [[ $SETUP_CMD != egg_info ]] && [[ $USE_WATCHDOG == yes ]]; then $PIP_INSTALL watchdog; fi
    - if [[ $SETUP_CMD != egg_info ]] && [[ $USE_TORNADO == yes ]]; then $PIP_INSTALL tornado; fi
    - if [[ $SETUP_CMD != egg_info ]] && [[ $USE_PYREG == yes ]]; then $PIP_INSTALL pyregion; fi
    - if [[ $SETUP_CMD != egg_info ]] && [[ $USE_STATSM == yes ]]; then $CONDA_INSTALL statsmodels; fi
    - if [[ $SETUP_CMD != egg_info ]]; then pip install .; fi

before_script:
    - set -v

script:
    - if [[ $SETUP_CMD != egg_info ]] && [[ $USE_TORNADO == yes ]]; then unset DISPLAY; fi; $MAIN_CMD $SETUP_CMD
after_script:

after_success:
#    # If coveralls.io is set up for this package, uncomment the line
#    # below and replace "packagename" with the name of your package.
#    # The coveragerc file may be customized as needed for your package.
   - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='srttools/tests/coveragerc'; codecov; fi
